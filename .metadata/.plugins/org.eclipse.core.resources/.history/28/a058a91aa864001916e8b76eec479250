package com.object_declarations

/*
 匿名对象只可以用在本地和私有作用域。如果匿名对象作为公有函数的返回类型或者用作公有属性的话，那么该函数或者属性
 的实际类型是匿名对象的超类型--如果没有声明任何超类型就默认是Any，在匿名对象中添加的成员将无法访问
 
 */
interface TestInterface {
	fun eat()
}

open class Person(age: Int) {
	open val age = age;
	private fun privateFun() = object {
		val x: String = "privateFun"
	}

	public fun publicFun() = object {
		val x: String = "publicFun"
	}

	fun foo() {
		println(privateFun().x)
//		println(publicFun().x)//error  匿名对象只可以用在本地和私有作用域
	}
}

val PersonExpression: Person = object : Person(17), TestInterface {
	override val age = 15;
	override fun eat() {
		println("PersonExpression run")
	}
}

fun main(args: Array<String>) {
//	val personExpression = PersonExpression()//erron；不可以这样实例化，这样会被当做
	val age = PersonExpression.age
	println("PersonExpression.age=${PersonExpression.age}")

	val person = Person(17)

}
