package com.delegate

import kotlin.reflect.KProperty
import kotlin.properties.ReadOnlyProperty

class ResourceID<T> {
	companion object {
		val image_id = ResourceID
		val text_id = ResourceID
	}
}

class MyUI {
	val image by bindResource(ResourceID.image_id)
}

fun <T> bindResource(id: ResourceID<T>): ResourceLoader<T> {

}

class ResourceLoader<T>(id: ResourceID<T>) {
	operator fun provideDelegate(thisRef: MyUI, prop: KProperty<*>): ReadOnlyProperty<MyUI, T> {
		checkProperty()
	}


	fun checkProperty() {

	}
}

